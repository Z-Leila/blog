---
layout: post
title:  "序言"
date:   2016-11-08 19:06:27 +0800
categories: jekyll update
---

### 写在前面

# 程序
大多数人在初次接触到程序的时候， 都会感觉到程序很难，让人望而却步， 其最主要的原因，我觉得两句话就可以概括。

1.编程是一门失传已久的艺术，这门艺术的名字叫思考
2.思考让人类痛苦

矛盾就在这里。 学习编程需要付出大量的思考，而这自然会让人感觉到痛苦。

只有当我们通过思考， 深刻了解到一个软件为什么要这么设计 一个API为什么要被提供出来， 而且还能把这些逻辑用在自己的开发过程中， 这个才叫真正的学习。

真正的学习需要我们去理解事物的内在运作逻辑， 最快速的理解方式就是把他这个内在逻辑用语言描述出来。 当我们能用自然语言把一件事说清楚的时候， 最起码证明我们对他有一个粗略的认知。 然而，自然语言的抽象层次过高， 在缺失很多细微逻辑的情况下， 依然可以被人类大致理解。 所以仅仅通过自然语言的描述并不能最精确的帮我们理解一件事物。

我们需要一些更严谨的语言来帮助我们描述对这个世界的精准认识。 数学语言诞生了，程序语言诞生了。 这样的语言生存在一个高度理性的规则系统中， 他们没有任何歧义，对错分明， 当我们能使用这种精准的语言把一件事物描述清楚的时候， 我们就真的能非常有把握的说， 我彻底掌握了这个东西。

我们把用这种最精准的语言描述出来的逻辑叫做程序。

# 程序员

程序员开发程序， 他们用程序语言来表达逻辑。

这是一项极具挑战性的工作 开发一个交互，设计，性能俱佳的程序更是挑战中的挑战。 然而很多时候，我们感觉不到这样的挑战 以WEB开发程序员为例: 请求一个的页面， 是一件简单的事情， 开发一个针对特定设备的页面， 同样很简单。 让一个web应用在服务器上跑起来， 依然很简单。 可Google为什么需要几千个世界上最聪明的员工？

WEB程序员首先得是一个程序员。 我们需要一条长长的技术栈， 这条技术栈上，荆棘丛生，深坑遍布， 操作系统，数据结构，网络协议，编译原理，算法， 每一个都需要我们去深挖， 才有可能让我们在碰到真正有挑战性的工作时游刃有余。 在深入挖掘的过程中， 我们需要加入自己的思考， 去了解技术背后的设计思想， 一个优雅的设计可以消灭掉很多并不需要解决的问题， 一个糟糕的设计思想会引入很多本该不存在的问题。 追寻最好的设计， 需要我们有强大的洞察力， 以及对知识点的全面了解来作为基础。

> “这个世界很美好,值得我们为之奋斗”
____海明威